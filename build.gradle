plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "5.0.0.4638"
    id "jacoco"
}

group = 'org.home'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

jacoco {
    toolVersion = "0.8.12"
}

ext {
    telegramVersion = '6.9.7.1'
    awsVersion = '1.12.739'
    jacksonVersion = '2.17.1'
    jaxbVVersion = '4.0.2'
    mockitoVersion = '5.12.0'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:4.1.2"
    implementation "org.springframework:spring-aop"
    implementation "org.telegram:telegrambots-spring-boot-starter:${telegramVersion}"
    implementation "org.telegram:telegrambots-abilities:${telegramVersion}"
    implementation "org.telegram:telegrambots-meta:${telegramVersion}"
    implementation "com.amazonaws:aws-java-sdk-secretsmanager:${awsVersion}"
    implementation "com.amazonaws:aws-java-sdk-core:${awsVersion}"
    implementation "com.amazonaws:aws-java-sdk:${awsVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:${jaxbVVersion}"
    implementation "org.glassfish.jaxb:jaxb-runtime:${jaxbVVersion}"
    implementation "org.glassfish.jaxb:jaxb-core:${jaxbVVersion}"
    implementation 'jakarta.activation:jakarta.activation-api:2.1.3'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'


    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"


}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "kinonight"
        property "sonar.host.url", "http://localhost:8084"
        property "sonar.token", "sqp_0a22230ab4b18c524c7a9639a8786f93bd9efaf5"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.binaries", "build/classes"
        property "sonar.qualitygate", "kinonight"
        property "sonar.junit.reportPaths", "build/test-results/test"
        property "sonar.jacoco.reportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"

    }
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

test {
    finalizedBy jacocoTestReport
}
